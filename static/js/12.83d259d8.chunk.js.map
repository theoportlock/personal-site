{"version":3,"sources":["components/Projects/Cell.js","data/projects.js","pages/Projects.js"],"names":["Cell","data","className","href","link","title","moment","date","format","src","process","image","alt","desc","subtitle","Projects","Main","Helmet","id","to","map","project"],"mappings":"uLA+BeA,EA3BF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACX,qBAAKC,UAAU,iBAAf,SACE,0BAASA,UAAU,YAAnB,UACE,mCACE,6BAAI,mBAAGC,KAAMF,EAAKG,KAAd,SAAqBH,EAAKI,UAC9B,sBAAMH,UAAU,YAAhB,SAA6BI,IAAOL,EAAKM,MAAMC,OAAO,mBAExD,mBAAGL,KAAMF,EAAKG,KAAMF,UAAU,QAA9B,SACE,qBAAKO,IAAG,UAAKC,kBAAL,OAA8BT,EAAKU,OAASC,IAAKX,EAAKI,UAEhE,qBAAKH,UAAU,cAAf,SACE,4BAAID,EAAKY,eCkCFZ,EAhDF,CACX,CACEI,MAAO,iBACPS,SAAU,qBACVV,KAAM,2BACNO,MAAO,qCACPJ,KAAM,aACNM,KACE,uMAKJ,CACER,MAAO,UACPS,SAAU,yDACVV,KAAM,uCACNO,MAAO,+BACPJ,KAAM,aACNM,KACE,2NAIJ,CACER,MAAO,eACPS,SAAU,uDACVV,KAAM,6BACNO,MAAO,mCACPJ,KAAM,aACNM,KACE,gLAIJ,CACER,MAAO,eACPS,SAAU,8DACVV,KAAM,wBACNO,MAAO,mCACPJ,KAAM,aACNM,KACE,0LCdSE,UApBE,kBACf,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQZ,MAAM,aACd,0BAASH,UAAU,OAAOgB,GAAG,WAA7B,UACE,iCACE,sBAAKhB,UAAU,QAAf,UACE,6BAAI,cAAC,IAAD,CAAMiB,GAAG,YAAT,wBACJ,yFAGHlB,EAAKmB,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,CACEpB,KAAMoB,GACDA,EAAQhB","file":"static/js/12.83d259d8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nconst Cell = ({ data }) => (\n  <div className=\"cell-container\">\n    <article className=\"mini-post\">\n      <header>\n        <h3><a href={data.link}>{data.title}</a></h3>\n        <time className=\"published\">{moment(data.date).format('MMMM, YYYY')}</time>\n      </header>\n      <a href={data.link} className=\"image\">\n        <img src={`${process.env.PUBLIC_URL}${data.image}`} alt={data.title} />\n      </a>\n      <div className=\"description\">\n        <p>{data.desc}</p>\n      </div>\n    </article>\n  </div>\n);\n\nCell.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    desc: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Cell;\n","// TODO Add a couple lines about each project\nconst data = [\n  {\n    title: 'Nearest Dollar',\n    subtitle: '2015 BVP Hackathon',\n    link: '/projects/nearestdollar/',\n    image: '/images/projects/nearestdollar.jpg',\n    date: '2015-11-20',\n    desc:\n      'Built for a social impact hackathon. '\n      + 'NearestDollar connected to your bank accounts, credit cards, '\n      + 'or debit cards and rounded up your purchases to donate the balance to '\n      + 'the charity of your choice.',\n  },\n  {\n    title: 'Harvest',\n    subtitle: 'Won 3rd. place in 2015 Techcrunch Disrupt SF Hackathon',\n    link: 'https://devpost.com/software/harvest',\n    image: '/images/projects/harvest.jpg',\n    date: '2015-09-20',\n    desc:\n      'Won ~ $7000 in prizes for an advanced, low cost monitoring solution '\n      + 'for crops. Harvest was designed to catch irrigation leaks, overwatering, '\n      + 'and nutrient deficiencies at an affordable price for the developing world.',\n  },\n  {\n    title: 'Space Potato',\n    subtitle: 'A kickstarter funded potato powered weather balloon.',\n    link: 'http://www.spacepotato.org',\n    image: '/images/projects/spacepotato.jpg',\n    date: '2015-06-28',\n    desc:\n      'Launched a potato battery powered weather balloon with two cameras '\n      + 'and gps transponder. Resulting photos were published in a coffee table book. '\n      + 'You can email me for a copy.',\n  },\n  {\n    title: 'Cat Detector',\n    subtitle: 'A convolutional neural network to classify cats! (and dogs)',\n    link: '/project/catdetector/',\n    image: '/images/projects/catdetector.jpg',\n    date: '2015-05-15',\n    desc:\n      'Trained a convolutional neural network to classify between ~ 80 cats breeds. '\n      + 'Over 60,000 cats were classified before server bills made the project too expensive '\n      + 'to continue hosting.',\n  },\n];\n\nexport default data;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\n\nimport Main from '../layouts/Main';\n\nimport Cell from '../components/Projects/Cell';\nimport data from '../data/projects';\n\nconst Projects = () => (\n  <Main>\n    <Helmet title=\"Projects\" />\n    <article className=\"post\" id=\"projects\">\n      <header>\n        <div className=\"title\">\n          <h2><Link to=\"/projects\">Projects</Link></h2>\n          <p>A selection of projects that I&apos;m not too ashamed of</p>\n        </div>\n      </header>\n      {data.map((project) => (\n        <Cell\n          data={project}\n          key={project.title}\n        />\n      ))}\n    </article>\n  </Main>\n);\n\nexport default Projects;\n"],"sourceRoot":""}